$primary-color: #444;
$secondary-color: #73deff;
$show-home-image: true;
$home-image: url(background.jpg);
$background-opacity: 0.6;


//a mixin is basically a function
@mixin easeOut {
    transition: all 0.5s ease-out;
}
//if show-home-image is true, take bg-image
@mixin background {
    @if $show-home-image {
        &#bg-img {
            background: $home-image;
            background-attachment: fixed;
            background-size: cover;
            //this makes it a psuedo element
            //after makes it so we don't have a div in html
            //makes it cleaner
            //not in HTML, treated as actual element after bg-img
            &:after {
                content:'';
                position: absolute;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                background: rgba($primary-color, $background-opacity);
                z-index: -1;
            }
        }
    }
}

//$color is a variable containing colour
//this is a function
//if lightness > 40, return black as color
@function set-text-color($color) {
    @if (lightness($color) > 40) {
        @return #000;
    } @else {
        @return #fff;
    }
}

//Media Query Mixins
//small media
//any css in mediaSm only applies when screen < 500px
//anything added here is put in @content
@mixin mediaSm {
    @media screen and (max-width: 500px) {
        @content;
    }
}
@mixin mediaMd {
    @media screen and (max-width: 768px) {
        @content;
    }
}
@mixin mediaLg {
    @media screen and (min-width: 769) and (max-width: 1170px) {
        @content;
    }
}
@mixin mediaXl {
    @media screen{
        @content;
    }
}